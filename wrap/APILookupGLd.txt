#
# This file is part of gtkD.
# 
# gtkD is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
# 
# gtkD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with gtkD; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#


#
###
#####
# Definitions for wrapping gtk gl ext GL
#####
###
#


addTypedefs: start

public import gtkc.glibtypes;
public import gtkc.gdktypes;
alias uint VisualID;

addTypedefs: end

addAliases: start
addAliases: end

addEnums: start
addEnums: end

addStructs: start
addStructs: end

addTypes: start
addTypes: end

addFuncts: start
addFuncts: end

addUnions: start
addUnions: end

addConstants: start
addConstants: end



# must start with wrap

wrap: glgdk
#srcout: srcgl

###########################################################
### GL ####################################################
###########################################################

file: gtkglext-gdkglinit.html

#struct: GMutex
class: GLdInit
prefix: gdk_gl_
outFile: GLdInit

file: gtkglext-gdkglquery.html

#struct: GMutex
class: GLQuery
prefix: gdk_gl_query_
import: glib.Str
import: gdk.Display
structWrap: GdkDisplay* Display
outFile: GLQuery

file: gtkglext-gdkglconfig.html

struct: GdkGLConfig
class: GLConfig
prefix: gdk_gl_config_
import: glib.Str
import: gdk.Screen
structWrap: GdkScreen* Screen

code: start
	/**
	 * Creates a mew OpenGL frame buffer configuration that match the specified display mode,
	 * or the fallback mode.
	 * Params:
	 *  mode = display mode bit mask.
	 *  fallback = Try this mode if first fails.
	 */
	this(GLConfigMode mode, GLConfigMode fallback)
	{
		
		gdkGLConfig = cast(GdkGLConfig*)gdk_gl_config_new_by_mode(mode);
		if ( gdkGLConfig is null )
		{
			printf ("*** Cannot find the double-buffered visual.\n");
			printf ("*** Trying single-buffered visual.\n");
			gdkGLConfig = cast(GdkGLConfig*)gdk_gl_config_new_by_mode(fallback);
		}
		if ( gdkGLConfig is null )
		{
			printf ("*** No appropriate OpenGL-capable visual found.\n");
			throw new Error("GL configure failed");
		}
		this(gdkGLConfig);
	}
	
code: end

outFile: GLConfig

file: gtkglext-gdkglcontext.html

struct: GdkGLContext
class: GLContext
prefix: gdk_gl_context_
import: glgdk.GLDrawable
structWrap: GdkGLDrawable* GLDrawable
outFile: GLContext

file: gtkglext-gdkgldrawable.html

struct: GdkGLDrawable
class: GLDrawable
prefix: gdk_gl_drawable_
import: glgdk.GLContext
structWrap: GdkGLContext* GLContext
outFile: GLDrawable

file: gtkglext-gdkglpixmap.html

struct: GdkGLPixmap
class: GLPixmap
prefix: gdk_gl_pixmap_
import: glgdk.GLConfig
structWrap: GdkGLCondif* GLConfig
outFile: GLPixmap

file: gtkglext-gdkglwindow.html

struct: GdkGLWindow
class: GLWindow
prefix: gdk_gl_window_
import: glgdk.GLConfig
structWrap: GdkGLCondif* GLConfig
outFile: GLWindow

file: gtkglext-gdkglfont.html

#struct: GdkGL
class: GLFont
prefix: gdk_gl_font_
import: glib.Str
import: gdk.Display
structWrap: GdkDisplay* Display
import: pango.PgFontDescription
structWrap: PangoFontDescription* PgFontDescription
outFile: GLFont

file: gtkglext-gdkglshapes.html

#struct: GdkGL
class: GLDraw
prefix: gdk_gl_draw_
outFile: GLDraw

file: gtkglext-gdkgltokens.html

#struct: GdkGL
class: GLTokens
prefix: gdk_gl_tokens_
outFile: GLTokens

#file: gtkglext-gdkglx.html
#
##struct: GdkGLX11
#class: GLX11
#prefix: gdk_gl_x11_
#import: glgdk.GLConfig
#structWrap: GdkGLCondif* GLConfig
#import: gdk.Screen
#structWrap: GdkScreen* Screen
#import: glgdk.GLContext
#structWrap: GdkGLContext* GLContext
#import: glgdk.GLPixmap
#structWrap: GdkGLPixmap* GLPixmap
#import: glgdk.GLWindow
#structWrap: GdkGLWindow* GLWindow
#outFile: GLX11

file: gtkglext-gdkglversion.html

#struct: GdkGLVersion
class: GLdVersion
prefix: gdk_gl_version_
outFile: GLdVersion
