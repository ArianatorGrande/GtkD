#
# This file is part of gtkD.
# 
# gtkD is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
# 
# gtkD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with gtkD; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#


#
###
#####
# Definitions for wrapping SourceView
#####
###
#


addTypedefs: start

public import gtkc.gtktypes;

addTypedefs: end

addAliases: start
addAliases: end

addEnums: start
addEnums: end

addStructs: start
public struct GtkTextViewClass{}

public struct GtkTextBufferClass{}
addStructs: end

addTypes: start
addTypes: end

addFuncts: start
addFuncts: end

addUnions: start
addUnions: end

addConstants: start
addConstants: end


# must start with wrap

wrap: sourceview

###########################################################
### GtkSourceView #########################################
###########################################################


file: GtkSourceView.html
struct: GtkSourceView
class: SourceView
prefix: gtk_source_view_
import: gdk.Pixbuf
structWrap: GdkPixbuf* Pixbuf
import: gdk.Color
structWrap: GdkColor* Color
import: gtk.TextIter
structWrap: GtkTextIter* TextIter
import: gsv.SourceGutter
structWrap: GtkSourceGutter* SourceGutter
import: gsv.SourceBuffer
structWrap: GtkSourceBuffer* SourceBuffer
import: gtkc.gtk
import: glib.Str

code: start

	/**
	 * Returns the GtkSourceBuffer being displayed by this source view.
	 * The reference count on the buffer is not incremented; the caller
	 * of this function won't own a new reference.
	 * Returns:
	 *  a GtkSourceBuffer
	 */
	public override SourceBuffer getBuffer()
	{
		// GtkSourceBuffer* gtk_text_view_get_buffer (GtkTextView *text_view);
		return new SourceBuffer( cast(GtkSourceBuffer*)gtk_text_view_get_buffer(cast(GtkTextView*)gtkSourceView) );
	}
	


code: end

outFile: SourceView

file: GtkSourceBuffer.html
struct: GtkSourceBuffer
class: SourceBuffer
prefix: gtk_source_buffer_
import: glib.Str
import: gtk.TextTagTable
structWrap: GtkTextTagTable* TextTagTable
import: gsv.SourceLanguage
structWrap: GtkSourceLanguage* SourceLanguage
import: gsv.SourceStyleScheme
structWrap: GtkSourceStyleScheme* SourceStyleScheme
import: gsv.SourceMark
structWrap: GtkSourceMark* SourceMark
import: glib.ListSG
structWrap: GSList* ListSG
import: gtk.TextIter
structWrap: GtkTextIter* TextIter
outFile: SourceBuffer

file: GtkSourceCompletion.html
struct: GtkSourceCompletion
class: SourceCompletion
prefix: gtk_source_completion_
import: glib.ErrorG
import: glib.GException
import: glib.ListG
structWrap: GList* ListG
import: gtk.TextIter
structWrap: GtkTextIter* TextIter
import: gsv.SourceCompletionInfo
structWrap: GtkSourceCompletionInfo* SourceCompletionInfo
import: gsv.SourceView
structWrap: GtkSourceView* SourceView
import: gsv.SourceCompletionContext
structWrap: GtkSourceCompletionContext* SourceCompletionContext
import: gsv.SourceCompletionProviderIF
structWrap: GtkSourceCompletionProvider* SourceCompletionProviderIF
outFile: SourceCompletion

file: gtksourceview-2.0-completioncontext.html
struct: GtkSourceCompletionContext
class: SourceCompletionContext
prefix: gtk_source_completion_context_
import: glib.Str
import: glib.ListG
structWrap: GList* ListG
import: gtk.TextIter
structWrap: GtkTextIter* TextIter
import: gsv.SourceCompletionProviderIF
structWrap: GtkSourceCompletionProvider* SourceCompletionProviderIF
outFile: SourceCompletionContext

file: GtkSourceCompletionInfo.html
struct: GtkSourceCompletionInfo
class: SourceCompletionInfo
implements: BuildableIF
prefix: gtk_source_completion_info_
import: gtk.TextIter
structWrap: GtkTextIter* TextIter
import: gtk.TextView
structWrap: GtkTextView* TextView
import: gtk.Widget
structWrap: GtkWidget* Widget

#imports for Buildable Interface.
import: gtk.BuildableIF
import: gtk.BuildableT

code: start
	// add the Buildable capabilities
	mixin BuildableT!(GtkSourceCompletionInfo);
code: end
outFile: SourceCompletionInfo

file: GtkSourceCompletionItem.html
struct: GtkSourceCompletionItem
class: SourceCompletionItem
implements: SourceCompletionProposalIF
prefix: gtk_source_completion_item_
import: glib.Str
import: gdk.Pixbuf
structWrap: GdkPixbuf* Pixbuf

#imports for SourceCompletionProposal Interface.
import: gsv.SourceCompletionProposalIF
import: gsv.SourceCompletionProposalT

code: start
	// add the SourceCompletionProposal capabilities
	mixin SourceCompletionProposalT!(GtkSourceCompletionItem);
code: end
outFile: SourceCompletionItem

file: GtkSourceCompletionProposal.html
struct: GtkSourceCompletionProposal
class: SourceCompletionProposalT
template: TStruct
prefix: gtk_source_completion_proposal_
import: glib.Str
import: gdk.Pixbuf
structWrap: GdkPixbuf* Pixbuf
structWrap: GtkSourceCompletionProposal* SourceCompletionProposalIF
interface: SourceCompletionProposalIF
outFile: SourceCompletionProposalT

file: GtkSourceCompletionProvider.html
struct: GtkSourceCompletionProvider
class: SourceCompletionProviderT
template: TStruct
prefix: gtk_source_completion_proposal_
import: glib.Str
import: gdk.Pixbuf
structWrap: GdkPixbuf* Pixbuf
import: gtk.TextIter
structWrap: GtkTextIter* TextIter
import: gtk.Widget
structWrap: GtkWidget* Widget
import: gsv.SourceCompletionContext
structWrap: GtkSourceCompletionContext* SourceCompletionContext
import: gsv.SourceCompletionInfo
structWrap: GtkSourceCompletionInfo* SourceCompletionInfo
import: gsv.SourceCompletionProposalIF
structWrap: GtkSourceCompletionProposal* SourceCompletionProposalIF
interface: SourceCompletionProviderIF
outFile: SourceCompletionProviderT

file: gtksourceview-2.0-Searching-in-a-GtkSourceBuffer.html
#struct: 
class: SourceSearch
prefix: gtk_source_iter_
structWrap: GtkTextIter* TextIter
import: gtk.TextIter
import: glib.Str
outFile: SourceSearch

file: GtkSourceGutter.html
struct: GtkSourceGutter
class: SourceGutter
prefix:  gtk_source_gutter_
import: gdk.Window
structWrap: GdkWindow* Window
import: gtk.CellRenderer
structWrap: GtkCellRenderer* CellRenderer
outFile: SourceGutter

file: GtkSourceMark.html
struct: GtkSourceMark
class: SourceMark
prefix: gtk_source_mark_
structWrap: GtkSourceMark* SourceMark
import: glib.Str
outFile: SourceMark

file: GtkSourceLanguage.html
struct: GtkSourceLanguage
class: SourceLanguage
prefix: gtk_source_iter_
import: glib.Str
outFile: SourceLanguage

file: GtkSourceLanguageManager.html
struct: GtkSourceLanguageManager
class: SourceLanguageManager
prefix: gtk_source_language_manager_
import: glib.Str
import: gsv.SourceLanguage
structWrap: GtkSourceLanguage* SourceLanguage
import: gsv.SourceLanguageManager
structWrap: GtkSourceLanguageManager* SourceLanguageManager
array: gtk_source_language_manager_set_search_path dirs
outFile: SourceLanguageManager

file: GtkSourcePrintCompositor.html
struct: GtkSourcePrintCompositor
class: SourcePrintCompositor
prefix: gtk_source_print_compositor_
import: gsv.SourceBuffer
structWrap: GtkSourceBuffer* SourceBuffer
import: gsv.SourceView
structWrap: GtkSourceView* SourceView
import: gtk.PrintContext
structWrap: GtkPrintContext* PrintContext
import: glib.Str
outFile: SourcePrintCompositor

file: GtkSourceStyle.html
struct: GtkSourceStyle
class: SourceStyle
prefix: gtk_source_style_
structWrap: GtkSourceStyle* SourceStyle
outFile: SourceStyle

file: GtkSourceStyleScheme.html
struct: GtkSourceStyleScheme
class: SourceStyleScheme
prefix: gtk_source_style_scheme_
import: gsv.SourceStyle
structWrap: GtkSourceStyle* SourceStyle
import: glib.Str
outFile: SourceStyleScheme

file: GtkSourceStyleSchemeManager.html
struct: GtkSourceStyleSchemeManager
class: SourceStyleSchemeManager
prefix: gtk_source_style_scheme_manager_
import: gsv.SourceStyleScheme
structWrap: GtkSourceStyleScheme* SourceStyleScheme
import: gsv.SourceStyleSchemeManager
structWrap: GtkSourceStyleSchemeManager* SourceStyleSchemeManager
import: glib.Str
array: gtk_source_style_scheme_manager_set_search_path path
outFile: SourceStyleSchemeManager

