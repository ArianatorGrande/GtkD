#
# This file is part of gtkD.
# 
# gtkD is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
# 
# gtkD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with gtkD; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#


#
###
#####
# Definitions for wrapping GThread
#####
###
#


addTypedefs: start

public import glib.glibtypes;

addTypedefs: end

addAliases: start
addAliases: end

addEnums: start
addEnums: end

addStructs: start
addStructs: end

addTypes: start
addTypes: end

addFuncts: start
addFuncts: end

addUnions: start
addUnions: end

addConstants: start
addConstants: end


# must start with wrap

wrap: gthread

###########################################################
### GThread ###############################################
###########################################################

file: glib-Threads.html

struct: GMutex
class: Mutex
prefix: g_mutex_
strictPrefix: Yes
outFile: Mutex

struct: GStaticRecMutex
class: StaticRecMutex
prefix: g_static_rec_mutex_
strictPrefix: Yes
outFile: StaticRecMutex

struct: GStaticRWLock
class: RWLock
prefix: g_static_rw_lock_
strictPrefix: Yes
outFile: RWLock

struct: GCond
class: Cond
import: glib.Date
structWrap: GDate* Date
prefix: g_cond_
strictPrefix: Yes
import: gthread.Mutex
structWrap: GMutex* Mutex
#import: glib.TimeVal
#structWrap: GTimeVal* TimeVal
outFile: Cond

struct: GPrivate
class: Private
import: glib.Dataset
structWrap: GDataset* Dataset
prefix: g_private_
strictPrefix: Yes
outFile: Private

struct: GStaticPrivate
class: StaticPrivate
import: glib.Dataset
structWrap: GDataset* Dataset
prefix: g_static_private_
strictPrefix: Yes
outFile: StaticPrivate


struct: GThread
class: Thread
import: glib.ErrorG
import: gthread.Mutex
structWrap: GMutex* Mutex
import: glib.Source
structWrap: GSource* Source
import: glib.Dataset
structWrap: GDataset* Dataset
import: glib.ListG
structWrap: GList* ListG
prefix: g_thread_
noprefix: g_mutex_
noprefix: g_static_rec_mutex_
noprefix: g_static_rw_lock_
noprefix: g_cond_
noprefix: g_private_
noprefix: g_static_private_
#import: glib.ThreadFunctions
#structWrap: GThreadFunctions* ThreadFunctions
structWrap: GThread* Thread
#import: glib.Error*
#structWrap: GError** Error*
#import: glib.StaticMutex
#structWrap: GStaticMutex* StaticMutex
outFile: Thread

