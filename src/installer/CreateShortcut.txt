> How can I programmatically create a shortcut to a files in the destop.
> 
> I have a file named Myfile.exe and i want to create a shortcut to this file
> in the destop, how can i do this?
> 
>
Here is the code

Most part of it comes from an article in a german magazine called 'PC
INTERN' edition 12/95.

the call to CreateShortcut looks like this:

CreateShortcut("C:\\windows\\Myfile.exe","",GetDesktopFolder(),"",SW_SHOW);
 

#include "shlobj.h"
typedef IShellLink *LPSHELLLINK;
char szDesktopPath[MAX_PATH];

/*
 Parameters:
 pszPath name of the file to create a shortcut for like
"C:\windows\Myfile.exe"
 pszArguments program arguments for Myfile.exe
 pszLocation pathname where you want to store the shortcut like
"C:\windows\desktop"
 pszWorkingDir working directory
 nCmdShow the way the program window shows up when started 
*/
BOOL CYourApp::CreateShortcut(LPSTR pszPath, LPSTR pszArguments, LPSTR
pszLocation, LPSTR pszWorkingDir, int nCmdShow)
{
 LPSHELLLINK pShellLink;
 HRESULT hrCoInit;
 HRESULT hr;
 char szLocation[MAX_PATH];
 char drive[_MAX_DRIVE];
 char dir[_MAX_DIR];
 char fname[_MAX_FNAME];
 char ext[_MAX_EXT];

 // create a filename for the shortcut like "C:\windows\desktop\shortcut to
Myfile.lnk"
 _splitpath( pszPath, drive, dir, fname, ext );

 lstrcpy (szLocation,pszLocation);
 lstrcat(szLocation,"\\shortcut to ");
 lstrcat(szLocation,fname);
 lstrcat(szLocation,".lnk");
 
 // initialize ole
 hrCoInit = CoInitialize( NULL );

 // create shelllink object
 hr = CoCreateInstance( CLSID_ShellLink, NULL, CLSCTX_INPROC_SERVER,
IID_IShellLink, (PVOID *)&pShellLink);

 if (SUCCEEDED(hr))
 {
  LPPERSISTFILE pPersistFile;

  // get the IPersistFile interface
  hr = pShellLink->QueryInterface(IID_IPersistFile, (PVOID
*)&pPersistFile);
  
  if (SUCCEEDED(hr))
  {
   // set the path to the file to create a shortcut for
   hr = pShellLink->SetPath(pszPath);
   // set arguments used by the pragram
   hr = pShellLink->SetArguments(pszArguments);
   // set workingdirectory
   hr = pShellLink->SetWorkingDirectory(pszWorkingDir);
   // set how the program shows up
   hr = pShellLink->SetShowCmd(nCmdShow);

   // set path of the shortcut and save to disk
   WORD wsz[MAX_PATH];
   MultiByteToWideChar(CP_ACP,0,szLocation,-1,wsz,MAX_PATH);
   hr = pPersistFile->Save(wsz, TRUE); 

   hr = pPersistFile->SaveCompleted(wsz); 
   hr = pPersistFile->Release(); 
  } hr = pShellLink->Release();
 }
 
 if (SUCCEEDED(hrCoInit))CoUninitialize();

 return SUCCEEDED(hr); 
}


/*
 Get the pathname of the desktop folder like "c:\windows\desktop"
*/

LPSTR CYourApp::GetDesktopFolder()
{
 LPSHELLFOLDER lpDesktop;
 LPITEMIDLIST pidl;
 HRESULT hrCoInit;

 hrCoInit = CoInitialize( NULL );

 if (SHGetDesktopFolder(&lpDesktop) == ERROR_SUCCESS)
 {
  if (SHGetSpecialFolderLocation( NULL , CSIDL_DESKTOPDIRECTORY, &pidl ) ==
NOERROR )
  {
   szDesktopPath[0] = '\0';
   SHGetPathFromIDList( pidl, szDesktopPath );
   CoTaskMemFree( pidl );
  }
  
  lpDesktop->Release();
 }
 
 if (SUCCEEDED(hrCoInit))CoUninitialize();
 
 return (LPSTR)&szDesktopPath;
}

 P.S. You have to add ole32.lib and uuid.lib in the input editbox of the
linker as well.