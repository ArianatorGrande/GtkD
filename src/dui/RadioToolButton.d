/*
 * This file is part of dui.
 * 
 * dui is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or
 * (at your option) any later version.
 * 
 * dui is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public License
 * along with dui; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

/*
 * - automatically generated by gtk2dui (dAntE)
 * - pos-processed by Antonio Monteiro
 */

module dui.RadioToolButton;

private import def.Types;
private import def.Constants;

private import dui.ToggleToolButton;
private import dui.ToolItem;

private struct GtkRadioToolButton;


private:
extern(C)
{
	GtkToolItem* gtk_radio_tool_button_new      (GSList *group);
	GtkToolItem* gtk_radio_tool_button_new_from_stock(GSList *group,  gchar *stock_id);
	GtkToolItem* gtk_radio_tool_button_new_from_widget(GtkRadioToolButton *group);
	GtkToolItem* gtk_radio_tool_button_new_with_stock_from_widget(GtkRadioToolButton *group,  gchar *stock_id);
	GSList*     gtk_radio_tool_button_get_group (GtkRadioToolButton *button);
	void        gtk_radio_tool_button_set_group (GtkRadioToolButton *button,GSList *group);
}

/**
 * 
 */
public
class RadioToolButton : ToggleToolButton
{

	protected:

	GtkRadioToolButton* gtkRadioToolButton;

	public:

	/**
	 * Creates a RadioToolButton from a GtkRadioToolButton
	 * @param *gtkToggleToolButton the gtk struct address pointer
	 * @return 
	 */
    this(GtkRadioToolButton* gtkRadioToolButton)
    {
        super(cast(GtkToggleToolButton*)gtkRadioToolButton);
		this.gtkRadioToolButton = gtkRadioToolButton;
    }


	/**
	 * Creates a new GtkRadioToolButton, adding it to group.
	 * @param group\ufffd An existing radio button group, or NULL if you are creating a new group
	 * @return The new GtkRadioToolButton
	 */
	this(GSList * group)
	{
		this(cast(GtkRadioToolButton*)gtk_radio_tool_button_new(group));
	}


	/**
	 * Creates a new GtkRadioToolButton, adding it to group. The new GtkRadioToolButton will contain an icon and
	 * label from the stock item indicated by stock_id.
	 * @param group\ufffd an existing radio button group, or NULL if you are creating a new group
	 * @param stock_id\ufffd the name of a stock item
	 * @return The new GtkRadioToolItem
	 */
	this(GSList * group, String  stockID)
	{
		this(cast(GtkRadioToolButton*)gtk_radio_tool_button_new_from_stock(group, stockID.toStringz()));
	}

	GtkRadioToolButton* getRTB()
	{
		return gtkRadioToolButton;
	}

	/**
	 * Creates a new GtkRadioToolButton adding it to the same group as gruup
	 * @param group\ufffd An existing GtkRadioToolButton
	 * @return The new GtkRadioToolButton
	 */
	this(RadioToolButton radioToolButton)
	{
		this(cast(GtkRadioToolButton*)gtk_radio_tool_button_new_from_widget(radioToolButton.getRTB()));
	}


	/**
	 * Creates a new GtkRadioToolButton adding it to the same group as group. The new GtkRadioToolButton will contain
	 * an icon and label from the stock item indicated by stock_id.
	 * @param group\ufffd An existing GtkRadioToolButton.
	 * @param stock_id\ufffd the name of a stock item
	 * @return A new GtkRadioToolButton
	 */
	this(RadioToolButton radioToolButton, String  stockID)
	{
		this(cast(GtkRadioToolButton*)
				gtk_radio_tool_button_new_with_stock_from_widget(radioToolButton.getRTB(), stockID.toStringz())
			);
	}


	/**
	 * Returns the radio button group button belongs to.
	 * @param button\ufffd a GtkRadioToolButton
	 * @return The group button belongs to.
	 */
	GSList* getGroup()
	{
		return gtk_radio_tool_button_get_group(gtkRadioToolButton);
	}


	/**
	 * Adds button to group, removing it from the group it belonged to before.
	 * @param button\ufffd a GtkRadioToolButton
	 * @param group\ufffd an existing radio button group
	 */
	void setGroup(GSList * group)
	{
		gtk_radio_tool_button_set_group(gtkRadioToolButton, group);
	}


}


/+
gtk_radio_tool_button_new ()

GtkToolItem* gtk_radio_tool_button_new      (GSList *group);

Creates a new GtkRadioToolButton, adding it to group.

group\ufffd:	An existing radio button group, or NULL if you are creating a new group
Returns\ufffd:	The new GtkRadioToolButton

Since 2.4
gtk_radio_tool_button_new_from_stock ()

GtkToolItem* gtk_radio_tool_button_new_from_stock
                                            (GSList *group,
                                             const gchar *stock_id);

Creates a new GtkRadioToolButton, adding it to group. The new GtkRadioToolButton will contain an icon and label from the stock item indicated by stock_id.

group\ufffd:	an existing radio button group, or NULL if you are creating a new group
stock_id\ufffd:	the name of a stock item
Returns\ufffd:	The new GtkRadioToolItem

Since 2.4
gtk_radio_tool_button_new_from_widget ()

GtkToolItem* gtk_radio_tool_button_new_from_widget
                                            (GtkRadioToolButton *group);

Creates a new GtkRadioToolButton adding it to the same group as gruup

group\ufffd:	An existing GtkRadioToolButton
Returns\ufffd:	The new GtkRadioToolButton

Since 2.4
gtk_radio_tool_button_new_with_stock_from_widget ()

GtkToolItem* gtk_radio_tool_button_new_with_stock_from_widget
                                            (GtkRadioToolButton *group,
                                             const gchar *stock_id);

Creates a new GtkRadioToolButton adding it to the same group as group. The new GtkRadioToolButton will contain an icon and label from the stock item indicated by stock_id.

group\ufffd:	An existing GtkRadioToolButton.
stock_id\ufffd:	the name of a stock item
Returns\ufffd:	A new GtkRadioToolButton

Since 2.4
gtk_radio_tool_button_get_group ()

GSList*     gtk_radio_tool_button_get_group (GtkRadioToolButton *button);

Returns the radio button group button belongs to.

button\ufffd:	a GtkRadioToolButton
Returns\ufffd:	The group button belongs to.

Since 2.4
gtk_radio_tool_button_set_group ()

void        gtk_radio_tool_button_set_group (GtkRadioToolButton *button,
                                             GSList *group);

Adds button to group, removing it from the group it belonged to before.

button\ufffd:	a GtkRadioToolButton
group\ufffd:	an existing radio button group

Since 2.4

+/

